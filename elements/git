# vim: filetype=zsh

if ! [[ -v _gitstatus_plugin_dir ]] ; then
  source "$EUCLID/gitstatus/gitstatus.plugin.zsh"
fi

gitstatus_stop "euclid" && gitstatus_start "euclid"

euclid::git() {
  gitstatus_query "euclid"
  [[ $VCS_STATUS_RESULT == "ok-sync" ]] || return
  euclid::ref
  euclid::tracking
  euclid::staging
  euclid::stash
}

euclid::optics "tag" "13"
euclid::optics "branch" "13"
euclid::optics "commit" "13"

euclid::fragment "tag" "\uf412 %s"
euclid::fragment "branch" "\uf418 %s"
euclid::fragment "commit" "\uf417 %s"

euclid::ref() {
  if [[ -n "$VCS_STATUS_TAG" ]]; then
    euclid::element "tag" "$VCS_STATUS_TAG"
  elif [[ -n "$VCS_STATUS_LOCAL_BRANCH" ]]; then
    euclid::element "branch" "$VCS_STATUS_LOCAL_BRANCH"
  else
    euclid::element "commit" "${VCS_STATUS_COMMIT[1,7]}"
  fi
}

euclid::optics "even" "214"
euclid::optics "ahead" "214"
euclid::optics "behind" "214"
euclid::optics "diverged" "214"

euclid::fragment "even" ""
euclid::fragment "ahead" " \uf44d"
euclid::fragment "behind" " \uf48b"
euclid::fragment "diverged" " \uf467"

euclid::tracking() {
  local ahead=$VCS_STATUS_COMMITS_AHEAD behind=$VCS_STATUS_COMMITS_BEHIND

  if (( !ahead && !behind )); then
    euclid::element "even" $ahead $behind
  elif (( !ahead && behind )); then
    euclid::element "behind" $ahead $behind
  elif (( ahead && !behind )); then
    euclid::element "ahead" $ahead $behind
  elif (( ahead && behind )); then
    euclid::element "diverged" $ahead $behind
  fi
}

euclid::optics "clean" "green"
euclid::optics "staged" "green"
euclid::optics "unstaged" "red"
euclid::optics "conflict" "red"

euclid::fragment "clean" " \uf7d7"
euclid::fragment "staged" " \uf7d8"
euclid::fragment "unstaged" " \uf7d8"
euclid::fragment "conflict" " \uf7d7"

euclid::staging() {
  local staged unstaged untracked conflicts
  staged=$VCS_STATUS_NUM_STAGED
  unstaged=$VCS_STATUS_NUM_UNSTAGED
  untracked=$VCS_STATUS_NUM_UNTRACKED
  conflicts=$VCS_STATUS_NUM_CONFLICTED

  if (( conflicts )); then
    euclid::element "conflict" $conflicts
  elif (( !staged && !unstaged && !untracked )); then
    euclid::element "clean" $staged $unstaged $untracked
  elif (( staged )); then
    euclid::element "staged" $staged $unstaged $untracked
  else
    euclid::element "unstaged" $staged $unstaged $untracked
  fi
}

euclid::optics "stash" "blue"

euclid::fragment "stash" " \uf461"

euclid::stash() {
  if (( VCS_STATUS_STASHES )); then
    euclid::element "stash" "$VCS_STATUS_STASHES"
  fi
}
