# vim: filetype=zsh

if ! [[ -v _gitstatus_plugin_dir ]] ; then
  source "$EUCLID/gitstatus/gitstatus.plugin.zsh"
fi

gitstatus_stop "euclid" && gitstatus_start "euclid"

euclid::git() {
  gitstatus_query "euclid"
  [[ $VCS_STATUS_RESULT == "ok-sync" ]] || return
  euclid::ref
  euclid::tracking
  euclid::staging
  euclid::stash
}

euclid::optics "git:ref" "13"

euclid::data "git:ref:tag" "\uf412 %s"
euclid::data "git:ref:branch" "\uf418 %s"
euclid::data "git:ref:commit" "\uf417 %s"

euclid::ref() {
  if [[ -n "$VCS_STATUS_TAG" ]]; then
    euclid::element "git:ref:tag" "$VCS_STATUS_TAG"
  elif [[ -n "$VCS_STATUS_LOCAL_BRANCH" ]]; then
    euclid::element "git:ref:branch" "$VCS_STATUS_LOCAL_BRANCH"
  else
    euclid::element "git:ref:commit" "${VCS_STATUS_COMMIT[1,7]}"
  fi
}

euclid::optics "git:tracking" "214"

euclid::data "git:tracking:even" ""
euclid::data "git:tracking:ahead" " \uf44d"
euclid::data "git:tracking:behind" " \uf48b"
euclid::data "git:tracking:diverged" " \uf467"

euclid::tracking() {
  local ahead=$VCS_STATUS_COMMITS_AHEAD behind=$VCS_STATUS_COMMITS_BEHIND

  if (( !ahead && !behind )); then
    euclid::element "git:tracking:even" $ahead $behind
  elif (( !ahead && behind )); then
    euclid::element "git:tracking:behind" $ahead $behind
  elif (( ahead && !behind )); then
    euclid::element "git:tracking:ahead" $ahead $behind
  elif (( ahead && behind )); then
    euclid::element "git:tracking:diverged" $ahead $behind
  fi
}

euclid::optics "git:index:clean" "green"
euclid::optics "git:index:staged" "green"
euclid::optics "git:index:unstaged" "red"
euclid::optics "git:index:conflict" "red"

euclid::data "git:index:clean" " \uf7d7"
euclid::data "git:index:staged" " \uf7d8"
euclid::data "git:index:unstaged" " \uf7d8"
euclid::data "git:index:conflict" " \uf7d7"

euclid::staging() {
  local staged unstaged untracked conflicts
  staged=$VCS_STATUS_NUM_STAGED
  unstaged=$VCS_STATUS_NUM_UNSTAGED
  untracked=$VCS_STATUS_NUM_UNTRACKED
  conflicts=$VCS_STATUS_NUM_CONFLICTED

  if (( conflicts )); then
    euclid::element "git:index:conflict" $conflicts
  elif (( !staged && !unstaged && !untracked )); then
    euclid::element "git:index:clean" $staged $unstaged $untracked
  elif (( staged )); then
    euclid::element "git:index:staged" $staged $unstaged $untracked
  else
    euclid::element "git:index:unstaged" $staged $unstaged $untracked
  fi
}

euclid::optics "git:stash" "blue"

euclid::data "git:stash" " \uf461"

euclid::stash() {
  if (( VCS_STATUS_STASHES )); then
    euclid::element "git:stash" "$VCS_STATUS_STASHES"
  fi
}
